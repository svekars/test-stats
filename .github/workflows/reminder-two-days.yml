name: Check Issues for Open Tests

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'  # Runs every day at midnight UTC

jobs:
  check-issues:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: Install dependencies
        run: npm install @actions/core @octokit/rest

      - name: Check issues
        env:
          GITHUB_TOKEN: ${{ secrets.TRAFFIC_ACTION_TOKEN }}
        run: |
          node -e '
            const core = require("@actions/core");
            const { Octokit } = require("@octokit/rest");

            async function run() {
              const octokit = new Octokit({ auth: process.env.GITHUB_TOKEN });
              const { owner, repo } = process.env.GITHUB_REPOSITORY;


              try {
                const { data: issues } = await octokit.rest.issues.listForRepo({
                  owner,
                  repo,
                  state: "open",
                  labels: "test",
                });

                for (const issue of issues) {
                  const { number, created_at, assignees } = issue;

                  const assignedDate = new Date(created_at);
                  const twoDaysAgo = new Date();
                  twoDaysAgo.setDate(twoDaysAgo.getDate() - 2);

                  if (assignedDate > twoDaysAgo) {
                    const { data: pullRequests } = await octokit.rest.pulls.list({
                      owner,
                      repo,
                      state: "open",
                    });

                    const matchingPullRequests = pullRequests.filter((pr) =>
                      pr.body.includes(`#${number}`)
                    );

                    if (matchingPullRequests.length === 0) {
                      const assigneeLogins = assignees.map((assignee) => assignee.login);
                      const comment = "@${issue.user.login}, please submit a pull request ASAP.";

                      await octokit.rest.issues.createComment({
                        owner,
                        repo,
                        issue_number: number,
                        body: comment,
                      });

                      core.info("Comment added to issue #${number}");
                    }
                  }
                }
              } catch (error) {
                core.setFailed(error.message);
              }
            }

            run();
          '
